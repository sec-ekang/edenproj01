# Updated on 8 June 2025 by Eden
global:
  nodeSelector:
    beta.kubernetes.io/os: linux

services:
  front-end:
    enabled: true
    replicaCount: 2
    image:
      repository: weaveworksdemos/front-end
      tag: "0.3.12"
      pullPolicy: IfNotPresent
    env:
      - name: SESSION_REDIS
        value: "session-db:6379"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    service:
      type: NodePort
      port: 80
      targetPort: 8079
      nodePort: 30001
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8079"
    hpa:
      enabled: true
      minReplicas: 2
      maxReplicas: 6
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

  carts:
    enabled: true
    replicaCount: 1
    image:
      repository: weaveworksdemos/carts
      tag: "0.4.8"
      pullPolicy: IfNotPresent
    env:
      - name: JAVA_OPTS
        value: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false"
    resources:
      requests:
        cpu: "100m"
        memory: "200Mi"
      limits:
        cpu: "300m"
        memory: "500Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
    volumes:
      - name: tmp-volume
        emptyDir:
          medium: Memory
    volumeMounts:
      - mountPath: /tmp
        name: tmp-volume

  carts-db:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: mongo
      tag: "4.2"
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 5Gi
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 27017
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 5
      periodSeconds: 5

  orders:
    enabled: true
    replicaCount: 2
    image:
      repository: weaveworksdemos/orders
      tag: "0.4.7"
      pullPolicy: IfNotPresent
    env:
      - name: JAVA_OPTS
        value: "-Xms128m -Xmx256m -XX:+UseG1GC"
    resources:
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 2
      maxReplicas: 8
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

  order-db:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: mongo
      tag: "4.2"
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 5Gi
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 27017
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 5
      periodSeconds: 5

  payment:
    enabled: true
    replicaCount: 1
    image:
      repository: weaveworksdemos/payment
      tag: "0.4.3"
      pullPolicy: IfNotPresent
    env:
      - name: JAVA_OPTS
        value: "-Xms64m -Xmx128m"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "300m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 80
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 60
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 5

  user:
    enabled: true
    replicaCount: 1
    image:
      repository: weaveworksdemos/user
      tag: "0.4.7"
      pullPolicy: IfNotPresent
    env:
      - name: MONGO_HOST
        value: "user-db:27017"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "300m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

  user-db:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: mongo
      tag: "4.2"
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 5Gi
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 27017
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 5
      periodSeconds: 5

  shipping:
    enabled: true
    replicaCount: 1
    image:
      repository: weaveworksdemos/shipping
      tag: "0.4.1"
      pullPolicy: IfNotPresent
    env:
      - name: JAVA_OPTS
        value: "-Xms64m -Xmx128m"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "300m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

  catalogue:
    enabled: true
    replicaCount: 2
    image:
      repository: weaveworksdemos/catalogue
      tag: "0.3.5"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: true
      minReplicas: 2
      maxReplicas: 6
      targetCPUUtilizationPercentage: 70
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 60
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 5

  catalogue-db:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: mongo
      tag: "4.2"
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 5Gi
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 27017
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 5
      periodSeconds: 5

  rabbitmq:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: rabbitmq
      tag: "3.7.8-management"
      pullPolicy: IfNotPresent
    env:
      - name: RABBITMQ_DEFAULT_USER
        value: "user"
      - name: RABBITMQ_DEFAULT_PASS
        value: "password"
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    service:
      type: ClusterIP
      ports:
        - name: amqp
          port: 5672
        - name: exporter
          port: 9090
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      capabilities:
        drop: ["all"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["rabbitmqctl", "status"]
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["rabbitmqctl", "status"]
      initialDelaySeconds: 10
      periodSeconds: 5

  queue-master:
    enabled: true
    replicaCount: 1
    image:
      repository: weaveworksdemos/queue-master
      tag: "0.3.1"
      pullPolicy: IfNotPresent
    env:
      - name: JAVA_OPTS
        value: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "300m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 80
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 10001
      capabilities:
        drop: ["all"]
        add: ["NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
    livenessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /health
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

  session-db:
    enabled: true
    stateful: true
    replicaCount: 1
    image:
      repository: redis
      tag: "5.0.4"
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: standard
      accessMode: ReadWriteOnce
      size: 1Gi
    resources:
      requests:
        cpu: "50m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
    service:
      type: ClusterIP
      port: 6379
    hpa:
      enabled: false
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
      capabilities:
        drop: ["all"]
        add: ["CHOWN","SETGID","SETUID"]
      readOnlyRootFilesystem: true
    livenessProbe:
      exec:
        command: ["redis-cli","ping"]
      initialDelaySeconds: 15
      periodSeconds: 10
    readinessProbe:
      exec:
        command: ["redis-cli","ping"]
      initialDelaySeconds: 5
      periodSeconds: 5
