# Stage 1: Build
FROM registry.access.redhat.com/ubi9/go-toolset:latest as builder

# Add labels for metadata
LABEL maintainer="Sock Shop Team"       description="Builder stage for Sock Shop user service"

WORKDIR /build

# Copy the source code
COPY . .

# Download Go dependencies and build statically
RUN go mod tidy && \
    CGO_ENABLED=0 GOOS=linux go build -o user ./cmd/user

# Stage 2: Minimal runtime
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

# Add labels for metadata
LABEL maintainer="Sock Shop Team"       description="Production image for Sock Shop user service"

ENV SERVICE_USER=myuser \
    SERVICE_UID=10001 \
    SERVICE_GROUP=mygroup \
    SERVICE_GID=10001

USER 0
RUN microdnf update -y \
    && microdnf install -y ca-certificates tzdata nc \
    && microdnf clean all \
    && groupadd -r -g ${SERVICE_GID} ${SERVICE_GROUP} \
    && useradd -r -u ${SERVICE_UID} -g ${SERVICE_GROUP} -m -d /home/${SERVICE_USER} -s /sbin/nologin ${SERVICE_USER} \
    && mkdir -p /opt

WORKDIR /opt

EXPOSE 8080

COPY --from=builder /build/user /opt/user

RUN chown ${SERVICE_USER}:${SERVICE_GROUP} /opt/user

USER ${SERVICE_USER}

HEALTHCHECK --interval=30s --timeout=3s   CMD nc -z 127.0.0.1 8080 || exit 1

CMD ["/opt/user", "-port=8080"]