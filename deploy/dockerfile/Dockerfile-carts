# Stage 1: Build
FROM registry.access.redhat.com/ubi9/openjdk-17:latest AS builder

USER 0

# Install Maven
RUN microdnf install -y maven

WORKDIR /build
# Copy app source (expect Docker build context to include the app)
COPY . /build

# Build the JAR
RUN mvn clean package -DskipTests

# Stage 2: Runtime
FROM registry.access.redhat.com/ubi9/openjdk-17-runtime:latest

ENV SERVICE_USER=myuser \
    SERVICE_UID=10001 \
    SERVICE_GROUP=mygroup \
    SERVICE_GID=10001

USER 0

RUN microdnf update -y \
    && microdnf install -y tzdata ca-certificates fontconfig glibc-langpack-en \
    && groupadd -r -g ${SERVICE_GID} ${SERVICE_GROUP} \
    && useradd -r -u ${SERVICE_UID} -g ${SERVICE_GROUP} -m -d /home/${SERVICE_USER} -s /sbin/nologin ${SERVICE_USER} \
    && mkdir -p /opt

WORKDIR /opt

# Copy built JAR from builder
COPY --from=builder /build/target/*.jar /opt/app.jar
RUN chown -R ${SERVICE_USER}:${SERVICE_GROUP} /opt/app.jar

USER ${SERVICE_USER}

EXPOSE 8080

ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/urandom", "-jar", "/opt/app.jar", "--server.port=8080"]